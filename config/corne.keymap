/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
        
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        }; 

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            quick-tap-ms = <200>;
        };

        shifthr: shifthr {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFTHR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <185>;
            flavor = "tap-preferred";
            quick-tap-ms = <185>;
        };

        weak: weak {
            compatible = "zmk,behavior-hold-tap";
            label = "WEAK";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            quick-tap-ms = <230>;
        };

        backspace: backspace {
            compatible = "zmk,behavior-tap-dance";
            label = "BACKSPACE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp LC(BACKSPACE)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        jk_fix {
            bindings = <&kp ESCAPE>;
            key-positions = <31 32>;
        };

        under {
            bindings = <&kp UNDER>;
            key-positions = <28 31>;
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <4 7>;
        };

        Clear_BLE_Profile {
            bindings = <&bt BT_CLR>;
            key-positions = <0 38 5>;
        };

        Space {
            bindings = <&kp SPACE>;
            key-positions = <29 28>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <17 16>;
        };

        Capslock {
            bindings = <&kp CAPS>;
            key-positions = <16 19>;
        };
    };

    macros {
        save: save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp ESCAPE &kp COLON &kp W &kp ENTER>;

            label = "SAVE";
        };

        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp B &kp R &kp Y &kp A &kp N &kp AT &kp P &kp E &kp C &kp J &kp O &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };

    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP  |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | LWR/' |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC   |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
            bindings = <
&kp TAB   &kp Q &kp W   &kp E    &kp R &kp T         &kp Y   &kp U  &kp I     &kp O   &kp P    &kp BSPC
&kp RCTRL &kp A &kp S   &kp D    &kp F &kp G         &kp H   &kp J  &kp K     &kp L   &kp SEMI &lt 1 SQT
&kp LSHFT &kp Z &kp X   &kp C    &kp V &kp B         &kp N   &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                        &kp LGUI &mo 1 &kp SPACE     &kp RET &mo 2  &kp RALT
                >;
        };

        lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  {  |  }  | "|" |   |  +  |  7  |  8  |  9  |  *  | Del |
// | POWR |  #  |  $  |  (  |  )  |  `  |   |  -  |  4  |  5  |  6  |  ;  | Ins |
// | CAPS |  %  |  ^  |  [  |  ]  |  ~  |   |  =  |  1  |  2  |  3  |  \  | ESC |
//                    | GUI |     | SPC |   | ENT |  .  |  0  |
            bindings = <
&kp TAB   &kp EXCL    &kp AT     &kp LBRC  &kp RBRC  &kp PIPE     &kp PLUS   &kp N7  &kp N8  &kp N9  &kp STAR &kp DEL
&ext_power EP_ON &kp HASH    &kp DOLLAR &kp LPAR  &kp RPAR  &kp GRAVE    &kp MINUS  &kp N4  &kp N5  &kp N6  &kp SEMI &kp INS
&kp CAPS  &kp PERCENT &kp CARET  &kp LBKT  &kp RBKT  &kp TILDE    &kp EQUAL  &kp N1  &kp N2  &kp N3  &kp BSLH &kp ESC
                                 &kp LGUI  &trans    &kp SPACE    &kp RET    &kp DOT &kp N0

            >;
        };

        raise_layer {
// -----------------------------------------------------------------------------------------
// | Vol+ |  F1  |  F2  |  F3  |  F4   |  email |   | HOME  | PG_DN | PG_UP | END    | Prev | Next |
// | Vol- |  F5  |  F6  |  F7  |  F8   |  ^V ^C |   | LEFT  | DOWN  |  UP   | RIGHT  |      |      |
// | Play |  F9  |  F10 |  F11 |  F12  |  PRTSC |   | alt-L | tab-L | tab-R | alt-R  |      |      |
//                     | BTCLR | BTNxt | BTPrev |   | ENT   |       | POWER |
            bindings = <
&kp C_VOL_UP &kp F1            &kp F2           &kp F3        &kp F4             &email           &kp HOME     &kp PAGE_DOWN   &kp PG_UP   &kp END       &kp C_PREV &kp C_NEXT
&kp C_VOL_DN &hm LEFT_META F5  &hm LEFT_ALT F6  &hm LCTRL F7  &hm LEFT_SHIFT F8  &hm LC(V) LC(C)  &kp LEFT     &kp DOWN        &kp UP      &kp RIGHT     &kp LG(R)  &kp LC(R)
&kp C_PP     &kp F9            &kp F10          &kp F11       &kp F12            &kp PSCRN        &kp LA(LEFT) &kp LC(LS(TAB)) &kp LC(TAB) &kp LA(RIGHT) &kp LC(T)  &kp LC(LS(T))
                                                &bt BT_CLR    &bt BT_NXT         &bt BT_PRV       &trans       &trans          &ext_power EP_TOG
            >;
        };

        extended_layer {
            label = "EXT";
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6           &kp F7           &kp F8           &kp F9                &kp F10               &kp F12
&kp K_PP  &kp K_PREV        &kp K_NEXT     &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP     &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans &trans &trans           &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &trans        &trans          &trans           &trans           &trans  &trans    
                                    &trans        &trans        &trans          &trans           &trans           &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Activate_EXT {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
