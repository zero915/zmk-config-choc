/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

&soft_off {
    hold-time-ms = <2000>; // Only turn off it the key is held for 2 seconds or longer.
};

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            quick-tap-ms = <200>;
        };

        sh: shifthr {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFTHR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <185>;
            flavor = "tap-preferred";
            quick-tap-ms = <185>;
        };

        wk: weak {
            compatible = "zmk,behavior-hold-tap";
            label = "WEAK";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            quick-tap-ms = <230>;
        };
    };

    combos {
        compatible = "zmk,combos";

        jk_fix {
            bindings = <&kp ESCAPE>;
            key-positions = <31 32>;
        };

        underline {
            bindings = <&kp UNDER>;
            key-positions = <28 31>;
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <4 7>;
        };

        Clear_BLE_Profile {
            bindings = <&bt BT_CLR>;
            key-positions = <0 38 5>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <30 31>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <17 16>;
        };

        caps {
            bindings = <&kp CAPS>;
            key-positions = <5 6>;
        };

        BT_next {
            bindings = <&bt BT_NXT>;
            key-positions = <5 38 1>;
            layers = <0>;
            timeout-ms = <0>;
            require-prior-idle-ms = <0>;
        };

        escape {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
        };

        left_bkt {
            bindings = <&kp LBKT>;
            key-positions = <3 4>;
        };

        right_bkt {
            bindings = <&kp RBKT>;
            key-positions = <8 7>;
        };

        left_par {
            bindings = <&kp LPAR>;
            key-positions = <4 5>;
        };

        right_par {
            bindings = <&kp RPAR>;
            key-positions = <7 6>;
        };

        left_prc {
            bindings = <&kp LBRC>;
            key-positions = <2 3>;
        };

        right_prc {
            bindings = <&kp RBRC>;
            key-positions = <8 9>;
        };

        backslsh {
            bindings = <&kp BSLH>;
            key-positions = <33 34>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <9 10>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <26 25>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <26 27>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <27 28>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <28 29>;
        };

        redo {
            bindings = <&kp LC(Y)>;
            key-positions = <24 25>;
        };

        return {
            bindings = <&kp RET>;
            key-positions = <21 22>;
        };
    };

    macros {
        save: save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp ESCAPE &kp COLON &kp W &kp ENTER>;

            label = "SAVE";
        };

        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp B &kp R &kp Y &kp A &kp N &kp AT &kp P &kp E &kp C &kp J &kp O &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };

        git_status: git_status {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp S &kp T &kp A &kp T &kp U &kp S>;
            label = "GIT_STATUS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
            //│  TAB     |    Q   [esc]  W   [ { ]   E  [ [ ]  R   [ ( ]   T    │   │   Y    [ ) ]  U   [ ] ]  I   [ } ] O    [ │ ]  P     │ BSPC     │
            //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            //│  SHIFT   │    A     │    S     │    D     │   F    [ ↵ ]   G    │   │   H      │    J     │  K       │  L     [ ↵ ]  ; :   │ LWR/'    │
            //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            //│  CTRL  [redo] Z  [undo]  X   [cut]  C  [copy] V  [paste]   B    │   │   N   [space] M     │ , <      │  . >   [ \ ]  / ?   │ RSE/ESC  │
            //╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
            //                                 │  WIN     │  LWR     │  SPACE   │   │  ENTER   │  RSE     │  RALT    │
            //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯

            bindings = <
&kp TAB    &kp Q       &kp W           &kp E        &kp R             &kp T        &kp Y    &kp U              &kp I        &kp O            &kp P     &kp BSPC
&kp RCTRL  &wk LGUI A  &wk LEFT_ALT S  &sh LCTRL D  &sh LEFT_SHIFT F  &kp G        &kp H    &sh RIGHT_SHIFT J  &sh RCTRL K  &wk RIGHT_ALT L  &kp SEMI  &lt 1 SQT
&kp LSHFT  &kp Z       &kp X           &kp C        &kp V             &kp B        &kp N    &kp M              &kp COMMA    &kp DOT          &kp FSLH  &lt 2 ESC
                                       &kp LGUI     &mo 1             &kp SPACE    &kp RET  &mo 2              &kp RALT
            >;
        };

        lower_layer {
            //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
            //|  TAB     |  !       |  @       |  {       |  }       | "|"      |   |  +       |  7       |  8       |  9       |  *       |  Del     |
            //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            //| Soft OFF |  #       |  $       |  (       |  )       |  `       |   |  -       |  4       |  5       |  6       |  &       |  Ins     |
            //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            //|          |  %       |  ^       |  [       |  ]       |  ~       |   |  =       |  1       |  2       |  3       |  \       |  ESC     |
            //╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
            //                                 |  WIN     |          |  SPACE   │   │  ENTER   │  .       |  0       |
            //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯

            bindings = <
&kp TAB    &kp EXCL            &kp AT               &kp LBRC        &kp RBRC             &kp PIPE     &kp PLUS   &kp N7   &kp N8  &kp N9  &kp STAR  &kp DEL
&soft_off  &wk LEFT_META HASH  &wk LEFT_ALT DOLLAR  &sh LCTRL LPAR  &sh LEFT_SHIFT RPAR  &kp GRAVE    &kp MINUS  &kp N4   &kp N5  &kp N6  &kp AMPS  &kp INS
&trans     &kp PERCENT         &kp CARET            &kp LBKT        &kp RBKT             &kp TILDE    &kp EQUAL  &kp N1   &kp N2  &kp N3  &kp BSLH  &kp ESC
                                                    &kp LGUI        &trans               &kp SPACE    &kp RET    &kp DOT  &kp N0
            >;
        };

        raise_layer {
            //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
            //|          |  F1      |  F2      |  F3      |  F4      | email    |   |          |  HOME    |  ▲       |  END     |  PG_UP   |          |
            //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            //|          |  F5      |  F6      |  F7      |  F8      | gitstatu |   |          |   ◄      |  ▼       |  ►       |  PG_DN   |  EP_TOG  |
            //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            //|          |  F9      |  F10     |  F11     |  F12     | PSCRN    |   |  ^R      |  ^S      |  ^O      |  ^C      |  ^V      |  ^X      |
            //╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
            //                                 |  WIN     |          |          |   |          |  RSE     |  RALT    |
            //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯

            bindings = <
&trans  &kp F1            &kp F2           &kp F3        &kp F4             &email         &trans     &kp HOME   &kp UP     &kp END    &kp PG_UP      &trans
&trans  &wk LEFT_META F5  &wk LEFT_ALT F6  &sh LCTRL F7  &sh LEFT_SHIFT F8  &git_status    &trans     &kp LEFT   &kp DOWN   &kp RIGHT  &kp PAGE_DOWN  &ext_power EP_TOG
&trans  &kp F9            &kp F10          &kp F11       &kp F12            &kp PSCRN      &kp LC(R)  &kp LC(S)  &kp LC(O)  &kp LC(C)  &kp LC(V)      &kp LC(X)
                                           &kp LGUI      &trans             &trans         &trans     &mo 2      &kp RALT
            >;
        };

        extended_layer {
            label = "EXT";

            //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
            //|          |          |          |  Prv     |  Nxt     |  ►II     |   |  Vol-    |  Vol+    |  Mute    |          |          |          |
            //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            //|          |          |          |          |          |          |   |  Bri-    |  Bri+    |  ^ T     |  ^⇧ T    |          |          |
            //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            //| BT CLR   |  BT1     |  BT2     |  BT3     |  BT4     |  BT5     |   |  alt-L   |  alt-R   |  ^ Tab   |  ^⇧ Tab  |          |          |
            //╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
            //                                 |  WIN     |          |          |   |          |          |          |
            //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯

            bindings = <
&trans      &trans        &trans        &kp C_PREVIOUS  &kp C_NEXT    &kp C_PLAY_PAUSE    &kp C_VOL_DN          &kp C_VOL_UP          &kp C_MUTE       &trans         &trans  &trans
&trans      &trans        &trans        &trans          &trans        &trans              &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp LC(T)        &kp LC(LS(T))  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4        &kp LA(LEFT)          &kp LA(RIGHT)         &kp LC(RS(TAB))  &kp LC(TAB)    &trans  &trans
                                        &kp LGUI        &trans        &trans              &trans                &trans                &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Activate_EXT {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
